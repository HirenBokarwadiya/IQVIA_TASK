@model IEnumerable<IQVIAAssignment.Models.TweetDetailsViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "Get Tweet";
}

<h2>AllTweet</h2>
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<p>
    @Html.ActionLink("Home", "Index")
</p>
@Html.ValidationSummary();
<div class="code-cut">
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(c => c.Year).Titled("Year").Filterable(true).Sortable(true);
    columns.Add(c => c.Month).Titled("Month").Filterable(true).Sortable(true);
    columns.Add(c => c.Day).Titled("Date").Filterable(true).Sortable(true);
    columns.Add(c => c.Time).Titled("Time").Filterable(false).Sortable(true);
    columns.Add(c => c.Description).Titled("Description").Filterable(false).Sortable(false);
    

}).WithPaging(10)
</div>



@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.stamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.text)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.stamp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.text)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                @Html.ActionLink("Details", "Details", new { id = item.id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.id })
            </td>
        </tr>
    }

</table>*@
