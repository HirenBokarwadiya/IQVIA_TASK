@model IEnumerable<IQVIAAssignment.Models.Tweet>
@using GridMvc.Html
@{
    ViewBag.Title = "AllTweet";
}

<h2>AllTweet</h2>
<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.10.2.min.js")"></script>
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>
<p>
    @Html.ActionLink("Home", "Index")
</p>

<div class="code-cut">
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(c => c.stamp).Titled("Date time").Filterable(true);
    columns.Add(c => c.text).Titled("Description").Filterable(true);
    columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .SetWidth(30)
    .RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { id = o.id }));

}).WithPaging(10).Sortable(true)
</div>

  

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.stamp)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.text)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.stamp)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.text)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
    </tr>
}

</table>


